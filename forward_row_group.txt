    function forward_row_group(large_table, id_array) {

        var previous_was_zero = true
        var group_id = 0
        var groups = []

        for (let i = 0; i <= 7; i++) {

            if (groups[group_id] && groups[group_id].length === 3) {
                let removed_cell = groups[group_id].pop()
                group_id++;
                groups[group_id] = []
                groups[group_id].push(removed_cell)
                group_id++;
            }

            if (large_table[8*i]["content"] === 1 && previous_was_zero === false) {

                group_id ++;
            }

            for (let j = 0; j <= 7; j ++) {

                let id = large_table[j + 8*i]["id"]
                large_table_content = large_table[j + 8*i]["content"]

                if (large_table_content === 1) {
                    
                    if (groups[group_id] && groups[group_id].indexOf(id) === -1) {

                        groups[group_id].push(id);
                        id_array[id]["is_valid"] = false
                        previous_was_zero = false

                    } else if (! groups[group_id]) {

                        groups[group_id] = []
                        groups[group_id].push(id);
                        id_array[id]["is_valid"] = false
                        previous_was_zero = false

                    }

                } else if (large_table_content === 0) {

                    if (previous_was_zero === false) {

                        if (groups[group_id] && groups[group_id].length === 3) {
                            let removed_cell = groups[group_id].pop()
                            group_id++;
                            groups[group_id] = []
                            groups[group_id].push(removed_cell)
                            group_id++;
                        }
                        group_id ++;
                        previous_was_zero = true

                    }

                }
            }    
        }

        for(let i = 0; i < groups.length; i++) {
            let emptyArr
            if (groups[i] === emptyArr) {
                groups.splice(i, 1)
            }
        }

        return groups
    }